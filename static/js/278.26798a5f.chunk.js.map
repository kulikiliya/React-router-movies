{"version":3,"file":"static/js/278.26798a5f.chunk.js","mappings":"+MAwEA,UA3De,WAAO,IAADA,EACXC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAiBC,EAAAA,EAAAA,SAAqB,QAAdN,EAAAG,EAASI,aAAK,IAAAP,OAAA,EAAdA,EAAgBQ,OAAQ,KACtDC,QAAQC,IAAIP,GAEZ,IAAAQ,GAA0BC,EAAAA,EAAAA,GAAQC,EAAAA,GAAaZ,GAAvCa,EAAIH,EAAJG,KAAMC,EAAOJ,EAAPI,QAENC,EAAuDF,EAAvDE,MAAOC,EAAgDH,EAAhDG,aAAcC,EAAkCJ,EAAlCI,SAAUC,EAAwBL,EAAxBK,OAAQC,EAAgBN,EAAhBM,YAG/C,OAAOL,GACLM,EAAAA,EAAAA,KAAA,KAAAC,SAAG,aAEHC,EAAAA,EAAAA,MAACC,EAAAA,GAAO,CAAAF,SAAA,EACNC,EAAAA,EAAAA,MAACE,EAAAA,GAAM,CAACC,GAAIrB,EAAesB,QAAQL,SAAA,EACjCD,EAAAA,EAAAA,KAAA,QAAAC,SAAOM,OAAOC,aAAa,QAAe,eAE5CN,EAAAA,EAAAA,MAACO,EAAAA,GAAc,CAAAR,SAAA,EACbD,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,OACEU,IAAG,kCAAAC,OAAoCZ,GACvCa,IAAKjB,EACLkB,QAAS,SAAAC,GACPA,EAAEC,cAAcL,IAdR,kCAeV,OAGJR,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAKN,KACLO,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,eAAae,SAASC,KAAKC,MAAqB,GAAftB,IAAoB,QACxDI,EAAAA,EAAAA,KAAA,MAAAC,SAAI,aACHJ,GAAWG,EAAAA,EAAAA,KAAA,KAAAC,SAAIJ,KAAgBG,EAAAA,EAAAA,KAAA,KAAAC,SAAG,aACnCD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,YACJD,EAAAA,EAAAA,KAACmB,EAAAA,GAAS,CAAAlB,SACD,OAANH,QAAM,IAANA,OAAM,EAANA,EAAQsB,KAAI,SAAAC,GACX,OAAOrB,EAAAA,EAAAA,KAAA,MAAAC,SAAoBoB,EAAMC,MAAjBD,EAAMzC,GACxB,aAINsB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACED,EAAAA,EAAAA,KAAA,MAAAC,SAAI,4BACJC,EAAAA,EAAAA,MAACqB,EAAAA,GAAc,CAAAtB,SAAA,EACbD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACnB,GAAE,WAAAM,OAAa/B,EAAG6C,WAAU,SAAQxB,SAAC,YAE7CD,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACwB,EAAAA,GAAI,CAACnB,GAAE,WAAAM,OAAa/B,EAAG6C,WAAU,YAAWxB,SAAC,qBAIpDD,EAAAA,EAAAA,KAAC0B,EAAAA,SAAQ,CAACC,UAAU3B,EAAAA,EAAAA,KAAA,OAAAC,SAAK,eAAiBA,UACxCD,EAAAA,EAAAA,KAAC4B,EAAAA,GAAM,QAIf,C","sources":["pages/Movies/Movies.jsx"],"sourcesContent":["import { useRef } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport {\n  WrapperForMain,\n  Wrapper,\n  BackTo,\n  GenreList,\n  AdditionalList,\n} from './movies.styled';\nimport { useHTTP } from 'hooks/useHTTP';\nimport { getMainList } from 'service/api';\n\nconst Movies = () => {\n  const { id } = useParams();\n  const location = useLocation();\n  const backToHrefLink = useRef(location.state?.from || '/');\n  console.log(location);\n\n  const { data, loading } = useHTTP(getMainList, id);\n\n  const { title, vote_average, overview, genres, poster_path } = data;\n\n  const imgNotFound = 'http://placekitten.com/g/200/300';\n  return loading ? (\n    <p>Loading</p>\n  ) : (\n    <Wrapper>\n      <BackTo to={backToHrefLink.current}>\n        <span>{String.fromCharCode(0x2190)}</span> Go back\n      </BackTo>\n      <WrapperForMain>\n        <div>\n          <img\n            src={`https://image.tmdb.org/t/p/w342${poster_path}`}\n            alt={title}\n            onError={e => {\n              e.currentTarget.src = imgNotFound;\n            }}\n          />\n        </div>\n        <div>\n          <h1>{title}</h1>\n          <p>User score: {parseInt(Math.floor(vote_average * 10))}%</p>\n          <h2>Overview</h2>\n          {overview ? <p>{overview}</p> : <p>Nothing</p>}\n          <h3>Genres</h3>\n          <GenreList>\n            {genres?.map(genre => {\n              return <li key={genre.id}>{genre.name}</li>;\n            })}\n          </GenreList>\n        </div>\n      </WrapperForMain>\n      <div>\n        <h2>Additional information</h2>\n        <AdditionalList>\n          <li>\n            <Link to={`/movies/${id.toString()}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${id.toString()}/reviews`}>Reviews</Link>\n          </li>\n        </AdditionalList>\n      </div>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </Wrapper>\n  );\n};\n\nexport default Movies;\n"],"names":["_location$state","id","useParams","location","useLocation","backToHrefLink","useRef","state","from","console","log","_useHTTP","useHTTP","getMainList","data","loading","title","vote_average","overview","genres","poster_path","_jsx","children","_jsxs","Wrapper","BackTo","to","current","String","fromCharCode","WrapperForMain","src","concat","alt","onError","e","currentTarget","parseInt","Math","floor","GenreList","map","genre","name","AdditionalList","Link","toString","Suspense","fallback","Outlet"],"sourceRoot":""}